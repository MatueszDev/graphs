#ifndef GRAPH_H_
#define GRAPH_H_

#include<iostream>
#include<cmath>

class Graph
{
    protected:
        unsigned generation = 0;
        unsigned short u;
        unsigned short v;
    public:
        Graph(unsigned short u, unsigned short v):u{u}, v{v}{if(u > v) throw -1;}

        virtual unsigned calcualteNumberOfNodes(unsigned gener)  const;
        virtual unsigned calcualteNumberOfEdges(unsigned gener) const;
        unsigned getGeneration() const{ return generation;}
        double fractalDimension() const;
        double calculateTeoreticalExponent() const;

        virtual unsigned sumAllEdges() const =0;
        virtual void createHistogramFile() const =0;
        virtual void nextGeneration() =0;

};




#endif
